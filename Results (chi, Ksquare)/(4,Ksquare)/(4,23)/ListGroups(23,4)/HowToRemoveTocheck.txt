 {*tocheck[i][3]: i in [1..#tocheck]*};  

{* 512^^14, 594^^5, 640^^58, 768^^101, 960^^197, 1024, 1152^^81, 1536^^14, 
1920^^40, 2016^^62, 2040^^6, 2052, 2064^^3, 2080^^2, 2088^^10, 2112^^19, 
2160^^42, 2184^^6, 2208^^2, 2240^^7, 2268^^5, 2280^^3, 2304^^22, 2320^^3, 2352, 
2376, 2400^^10, 2448^^8, 2496^^2, 2520^^72, 2560, 2592^^8, 2640^^4, 2688^^21, 
2700, 2736^^4, 2784^^3, 2790, 2808^^2, 2850, 2880^^14, 2940^^4, 2952^^2, 
3024^^18, 3072, 3096, 3120^^2, 3150^^5, 3168^^4, 3240, 3300, 3360^^15, 3420, 
3456^^5, 3480^^3, 3504^^2, 3600^^3, 3648^^2, 3720, 3744^^2, 3780^^2, 3840^^5, 
3888^^2, 3936^^2, 4032^^11, 4104, 4128^^2, 4176^^4, 4200^^5, 4212, 4224^^2, 
4248, 4320, 4428, 4536^^5, 4560, 4608^^2, 4644, 4752, 4800^^2, 4960, 5040^^22, 
5120, 5184, 5200, 5280, 5360, 5376, 5400, 5600^^5, 5616, 5760^^3, 5800^^3, 
6048^^9, 6240, 6400, 6480, 6720^^7, 6912, 6960^^3, 7008, 7056, 7200, 7296, 7344,
7392, 7488, 7560, 7584, 7632, 7680, 7776, 7872, 8064^^5, 8256, 8352^^3, 8448, 
9072, 9216, 9828, 10080^^2, 28224 *}


// No one of the groups of the list can be perfect: 

time Result:=how_to_excludePG(tocheck);

Time: 211.090

#Result;
3

PG:=PerfectGroupDatabase();
for x in Result do 
  G:=PermutationGroup(PG,x[3][1],x[3][2]);
  Triple:=[*x[1],x[2], G*];
  if ExistingSurfaces_triple_givenG(Triple) then x; end if; 
end for; 

// Hence no cases of PerfectGroups occur. 

// Let us exclude those triples having group order {512,594,640,960,1152,1920};

time Result:=how_to_exclude(tocheck: Interested_orders:={512,594,640,960,1152,1920}); 

Time: 38639.530

#Result;
5

ExistingSurfaces(Result);
[* *]

time Result:=how_to_exclude(tocheck: Interested_orders:={768});

Time: 113592.220

#Result;                                                        
4

ExistingSurfaces(Result);
[* *]

// We now exclude the cases of group order 1536. These cases are the following

[*x : x in tocheck | x[3] eq 1536*];
[* [*
    {* 1/5^^5 *},
    {*
        {* 2, 3, 8 *},
        {* 2, 8^^2 *}
    *},
    1536
*], [*
    {* 1/5^^5 *},
    {*
        {* 2, 4, 6 *},
        {* 2, 4, 8 *}
    *},
    1536
*], [*
    {* 1/5^^5 *},
    {*
        {* 2, 3, 8 *},
        {* 4^^3 *}
    *},
    1536
*], [*
    {* 1/5^^5 *},
    {*
        {* 2, 3, 8 *},
        {* 2, 5, 20 *}
    *},
    1536
*], [*
    {* 1/5^^5 *},
    {*
        {* 2, 3, 8 *},
        {* 2^^3, 4 *}
    *},
    1536
*], [*
    {* 1/5^^5 *},
    {*
        {* 2, 3, 12 *},
        {* 2, 4, 8 *}
    *},
    1536
*], [*
    {* 3/20, 2/5, 1/2, 3/4 *},
    {*
        {* 2, 3, 8 *},
        {* 2, 4, 32 *}
    *},
    1536
*], [*
    {* 1/3^^3, 2/3^^3 *},
    {*
        {* 2, 3, 8 *},
        {* 2, 4, 16 *}
    *},
    1536
*], [*
    {* 1/5, 1/2, 11/20, 3/4 *},
    {*
        {* 2, 3, 8 *},
        {* 2, 4, 32 *}
    *},
    1536
*], [*
    {* 1/8, 1/2, 5/8, 3/4 *},
    {*
        {* 2, 3, 8 *},
        {* 2, 4, 32 *}
    *},
    1536
*], [*
    {* 1/8, 1/4, 7/24, 1/3 *},
    {*
        {* 2, 3, 8 *},
        {* 2, 4, 256 *}
    *},
    1536
*], [*
    {* 1/3, 1/2, 13/24, 5/8 *},
    {*
        {* 2, 3, 8 *},
        {* 2, 4, 32 *}
    *},
    1536
*], [*
    {* 2/9^^3, 1/3 *},
    {*
        {* 2, 3, 8 *},
        {* 2, 4, 48 *}
    *},
    1536
*], [*
    {* 5/24, 1/2, 5/8, 2/3 *},
    {*
        {* 2, 3, 8 *},
        {* 2, 4, 32 *}
    *},
    1536
*] *]

// However, from Proposition 3.3 of "The classification of minimal product-quotient surfaces with pg=0" by Bauer-Pignatelli, there is only one group of order 1536 admitting an appropriate spherical system of generators of signature {2,3,8} having abelianization of order 2. This group is <1536, 408544637>. Let us consider 

Result:=[*
[*
    {* 1/5^^5 *},
    {*
        {* 2, 3, 8 *},
        {* 2, 8^^2 *}
    *},
    <1536, 408544637>
*],
[*
    {* 1/5^^5 *},
    {*
        {* 2, 3, 8 *},
        {* 4^^3 *}
    *},
     <1536, 408544637>
*], [*
    {* 1/5^^5 *},
    {*
        {* 2, 3, 8 *},
        {* 2, 5, 20 *}
    *},
     <1536, 408544637>
*], [*
    {* 1/5^^5 *},
    {*
        {* 2, 3, 8 *},
        {* 2^^3, 4 *}
    *},
     <1536, 408544637>
*],
[*
    {* 3/20, 2/5, 1/2, 3/4 *},
    {*
        {* 2, 3, 8 *},
        {* 2, 4, 32 *}
    *},
     <1536, 408544637>
*], [*
    {* 1/3^^3, 2/3^^3 *},
    {*
        {* 2, 3, 8 *},
        {* 2, 4, 16 *}
    *},
     <1536, 408544637>
*], [*
    {* 1/5, 1/2, 11/20, 3/4 *},
    {*
        {* 2, 3, 8 *},
        {* 2, 4, 32 *}
    *},
     <1536, 408544637>
*], [*
    {* 1/8, 1/2, 5/8, 3/4 *},
    {*
        {* 2, 3, 8 *},
        {* 2, 4, 32 *}
    *},
     <1536, 408544637>
*], [*
    {* 1/8, 1/4, 7/24, 1/3 *},
    {*
        {* 2, 3, 8 *},
        {* 2, 4, 256 *}
    *},
     <1536, 408544637>
*], [*
    {* 1/3, 1/2, 13/24, 5/8 *},
    {*
        {* 2, 3, 8 *},
        {* 2, 4, 32 *}
    *},
     <1536, 408544637>
*], [*
    {* 2/9^^3, 1/3 *},
    {*
        {* 2, 3, 8 *},
        {* 2, 4, 48 *}
    *},
     <1536, 408544637>
*], [*
    {* 5/24, 1/2, 5/8, 2/3 *},
    {*
        {* 2, 3, 8 *},
        {* 2, 4, 32 *}
    *},
    <1536, 408544637>
*]
*];

ExistingSurfaces(Result);
[* *]

It remains to discuss only two cases: 

[*[*
    {* 1/5^^5 *},
    {*
        {* 2, 4, 6 *},
        {* 2, 4, 8 *}
    *},
    1536
*],[*
    {* 1/5^^5 *},
    {*
        {* 2, 3, 12 *},
        {* 2, 4, 8 *}
    *},
    1536
*]*]

// These can be automatically excluded since the same computation is already done in the case (Ksquare, chi)=(32,4). More precisely, It turns out that there are not groups of order 1536 having a pair of spherical systems of generators compatible with the signatures {* 2, 4, 6 *} and {* 2, 4, 8 *}, and with the signatures {* 2, 3, 12 *}, {* 2, 4, 8 *}. 

// Now let us discuss the case of group order 1024 

L:=[*x : x in tocheck | x[3] eq 1024*];

L;
[* [*
    {* 1/5^^5 *},
    {*
        {* 2, 4, 8 *}^^2
    *},
    1024
*] *]



time Res,Res_Ab:=how_to_exclude(List_Intermediate_Sign_from_a_triple(L[1],2));

Time: 14933.900

#Res;                                                                        
114

IntBasket:=function(a, j)
  IntB:=[];
  B:={k/a : k in [1..a-1]};
  for i in [0..j] do 
    Append(~IntB, Multisets(B, i));
  end for;
  Fin:={};
  for i in [1..#IntB] do 
    for s in IntB[i] do 
      Include(~Fin, s);
    end for;
  end for;
  return Fin;
end function;

FinIntBasket:=function(basket)
  Final:=[**];

  t:={* Denominator(r): r in basket*};
  Seq:=[[a,#[ x : x in t | x eq a]]: a in MultisetToSet(t)];
  A:=[];
  for s in Seq do 
     Append(~A, IntBasket(s[1],s[2]));
  end for;  
  for x in CartesianProduct(A) do  
   int_bas:={**};
   for l in x do 
    for y in l do 
      Include(~int_bas, y); 
    end for;
   end for;
   Append(~Final, int_bas);
  end for; 
  return {x : x in Final};
end function;

FinRes:=[**];

for x in Res do 
  for bas in FinIntBasket(x[1]) do 
    Append(~FinRes, [*bas, x[2], x[3]*]);
  end for;
end for;

time ExSurf:=ExistingSurfaces(FinRes);
Time: 58404.180

ExSurf;
[* [*
    {* *},
    {*
        {* 4^^3 *}^^2
    *},
    <512, 325>
*], [*
    {* *},
    {*
        {* 4^^3 *}^^2
    *},
    <512, 335>
*], [*
    {* *},
    {*
        {* 4^^3 *}^^2
    *},
    <512, 351>
*] *]

Ab:=SmallGroup(8,2);
GroupName(Ab); // C4xC2
T:=AllSubgroups(Ab);
#T; // 8
IdQuoT:={};
for i in [1..#T] do 
 Include(~IdQuoT,IdentifyGroup(quo<Ab|T[i ]>));
end for;

IdQuoT; // { <8, 2>, <4, 1>, <1, 1>, <4, 2>, <2, 1> }

Final:=[**];
tocheck_compatible1024:=[**];

K:=SmallGroup(2,1);

for x in ExSurf do  
  H:=SmallGroup(x[3][1],x[3][2]);
  AutH:=AutomorphismGroup(H); 
  r, P:=PermutationRepresentation(AutH);
  ord2:={phi: phi in P| Order(phi) eq 2}; {*Order(phi): phi in P*};
  for phi in ord2 do 
    t:=hom<K -> AutH| <K.1, phi @@ r>>;
    G:=SemidirectProduct(H,K,t);
    Append(~Final, [* x, phi, IdentifyGroup(quo<G|DerivedGroup(G)>)*]);
    if IdentifyGroup(quo<G|DerivedGroup(G)>) in IdQuoT then
       IdentifyGroup(quo<G|DerivedGroup(G)>);
           if  ExSphSystem_givenG(G,{*2,4,8*}) then 
             Append(~tocheck_compatible1024,[*{* 1/5^^5 *},{*{*2,4,8*}^^2*},G*]); 
           end if; 
    end if;
    
  end for;
 end for;

#tocheck_compatible1024;
640

ExSurf1024:=[**];

for x in tocheck_compatible1024 do 
       IdentifyGroup(quo<x[3]|DerivedGroup(x[3])>); // DEBUG
       if ExistingSurfaces_triple_givenG(x) then  
            Append(~ExSurf1024, x);
          end if; 
end for;

#ExSurf1024;                                                                 
0

// In this way we have excluded all groups of tocheck less or equal than 2000. 

////////////////////////////////////////////////////////////

List:=[*x : x in tocheck | x[3] gt 2000*];

Result, NotSatisfyProp33, PerfectGroups:=List_Intermediate_Sign(List);

#Result;
576
> #NotSatisfyProp33;
19
> #PerfectGroups;
124


// Since we have already excluded that no one of the groups of tocheck is perfect, then we can automatically exclude the triples stored in PerfectGroups;

{* x[3]: x in Result*};
{* 672^^11, 684, 696^^7, 704^^2, 720^^3, 756^^5, 768^^2, 792, 840^^4, 864^^3, 
912^^2, 936^^2, 984^^2, 1008^^80, 1020^^6, 1032^^4, 1040^^4, 1056^^22, 1080^^25,
1104^^2, 1120^^17, 1140^^5, 1152^^27, 1160^^9, 1176^^3, 1200^^10, 1224^^7, 
1248^^4, 1260^^30, 1280^^3, 1296^^8, 1320^^6, 1344^^20, 1350, 1368^^3, 1392^^10,
1395, 1404, 1416, 1425, 1440^^18, 1470^^4, 1476, 1512^^13, 1536^^3, 1548, 
1560^^4, 1575^^5, 1584^^3, 1620, 1650, 1680^^29, 1728^^6, 1740^^3, 1752^^4, 
1800^^2, 1824^^4, 1860, 1872^^4, 1920^^5, 1944, 1968^^4, 2016^^21, 2064^^4, 
2088^^3, 2100^^5, 2112^^4, 2160, 2280, 2304^^4, 2400^^2, 2480, 2520^^5, 2560, 
2600, 2640, 2680, 2700, 2800^^5, 2880^^2, 2900^^3, 3120, 3200, 3240, 3360^^7, 
3456, 3480^^3, 3504, 3528, 3600, 3648, 3672, 3696, 3744, 3792, 3816, 3840, 3888,
3936, 4032^^5, 4128, 4176^^3, 4224, 4536, 4608 *}

time Res,ResAb:=how_to_exclude(Result: Interested_orders:={j : j in [1..2000] | j ne 1536 and j ne 1416});

Time: 8769.560

#Res;                                                                        
33

IntBasket:=function(a, j)
  IntB:=[];
  B:={k/a : k in [1..a-1]};
  for i in [0..j] do 
    Append(~IntB, Multisets(B, i));
  end for;
  Fin:={};
  for i in [1..#IntB] do 
    for s in IntB[i] do 
      Include(~Fin, s);
    end for;
  end for;
  return Fin;
end function;

FinIntBasket:=function(basket)
  Final:=[**];

  t:={* Denominator(r): r in basket*};
  Seq:=[[a,#[ x : x in t | x eq a]]: a in MultisetToSet(t)];
  A:=[];
  for s in Seq do 
     Append(~A, IntBasket(s[1],s[2]));
  end for;  
  for x in CartesianProduct(A) do  
   int_bas:={**};
   for l in x do 
    for y in l do 
      Include(~int_bas, y); 
    end for;
   end for;
   Append(~Final, int_bas);
  end for; 
  return {x : x in Final};
end function;

FinRes:=[**];

for x in Res do 
  for bas in FinIntBasket(x[1]) do 
    Append(~FinRes, [*bas, x[2], x[3]*]);
  end for;
end for;

time ExSurf:=ExistingSurfaces(FinRes);

Time: 9836.370

ExSurf;
[* [*
    {* 1/3^^3, 2/3^^3 *},
    {*
        {* 3, 5^^2 *},
        {* 3^^2, 4 *}
    *},
    <1080, 260>
*], [*
    {* 1/2^^2 *},
    {*
        {* 3^^2, 4 *},
        {* 3^^2, 6 *}
    *},
    <1944, 3875>
*] *]

// We can check that the triple with group order 1080 comes from the following triple of List: 

[*
    {* 1/3^^3, 2/3^^3 *},
    {*
        {* 2, 3, 8 *},
        {* 2, 5, 6 *}
    *},
    2160
*];

x:=ExSurf[1];

Final:=[**];
tocheck_compatible2160:=[**];

K:=SmallGroup(2,1);

  H:=SmallGroup(x[3][1],x[3][2]);
  AutH:=AutomorphismGroup(H); 
  r, P:=PermutationRepresentation(AutH);
  ord2:={phi: phi in P| Order(phi) eq 2}; {*Order(phi): phi in P*};
  for phi in ord2 do 
    t:=hom<K -> AutH| <K.1, phi @@ r>>;
    G:=SemidirectProduct(H,K,t);
    Append(~Final, [* x, phi, IdentifyGroup(quo<G|DerivedGroup(G)>)*]);
    if IdentifyGroup(quo<G|DerivedGroup(G)>) eq <2, 1> then
       IdentifyGroup(quo<G|DerivedGroup(G)>);
           if  ExSphSystem_givenG(G,{*2,3,8*}) then 
            if ExSphSystem_givenG(G,{*2,5,6*}) then
             Append(~tocheck_compatible2160,[*{* 1/3^^3, 2/3^^3 *},{*{*2,3,8*},{*2,5,6*}*},G*]); 
           end if; 
           end if;
    end if;
    end for;

tocheck_compatible2160; 
[* *]

// Instead, the triple with group order 1944 comes from the following triple of List: 

[*
    {* 7/24, 1/3, 3/8, 1/2^^2 *},
    {*
        {* 2, 3, 8 *},
        {* 2, 3, 12 *}
    *},
    3888
*] 

x:=ExSurf[2];

Final:=[**];
tocheck_compatible3888:=[**];

K:=SmallGroup(2,1);

  H:=SmallGroup(x[3][1],x[3][2]);
  AutH:=AutomorphismGroup(H); 
  r, P:=PermutationRepresentation(AutH);
  ord2:={phi: phi in P| Order(phi) eq 2}; {*Order(phi): phi in P*};
  for phi in ord2 do 
    t:=hom<K -> AutH| <K.1, phi @@ r>>;
    G:=SemidirectProduct(H,K,t);
    Append(~Final, [* x, phi, IdentifyGroup(quo<G|DerivedGroup(G)>)*]);
    if IdentifyGroup(quo<G|DerivedGroup(G)>) eq <2, 1> then
       IdentifyGroup(quo<G|DerivedGroup(G)>);
           if  ExSphSystem_givenG(G,{*2,3,8*}) then 
            if ExSphSystem_givenG(G,{*2,3,12*}) then
             Append(~tocheck_compatible3888,[*{* 7/24, 1/3, 3/8, 1/2^^2 *},{*{*2,3,8*},{*2,3,12*}*},G*]); 
           end if; 
           end if;
    end if;
    end for;

tocheck_compatible3888;
[* *]

// Let us discuss the three cases of Result of group order 1536

L:=[* x : x in Result | x[3] eq 1536 *];

L;
[* [*
    {* 1/5^^5 *},
    {*
        {* 2^^3, 4 *},
        {* 3^^2, 4 *}
    *},
    1536
*], [*
    {* 1/5^^5 *},
    {*
        {* 2, 8^^2 *},
        {* 3^^2, 4 *}
    *},
    1536
*], [*
    {* 1/5^^5 *},
    {*
        {* 3^^2, 4 *},
        {* 4^^3 *}
    *},
    1536
*] *]

time Res,ResAb:=how_to_exclude(L: Interested_orders:={1536});
Time: 0.000
Res;
[* *]
// This happened since the group of order 1536 having compatible signatures is forced to be a perfect group. However, there are no perfect groups of order 1536. 


// It remains to discuss the case of group order 1416

L:=[* x : x in Result | x[3] eq 1416 *];
L;
[* [*
    {* 5/18, 1/2^^2, 13/18 *},
    {*
        {* 2^^3, 3 *}^^2
    *},
    1416
*] *]

// This case comes from 

[* x : x in List | x[3] in {1416*i : i in [1..30]}*];
[* [*
    {* 5/18, 1/2^^2, 13/18 *},
    {*
        {* 2, 3, 9 *}^^2
    *},
    4248
*] *]

Final:=[**];
tocheck_compatible4248:=[**];

K:=SmallGroup(3,1);

for x in L do 
  for i in [1..NumberOfSmallGroups(x[3])] do 
  H:=SmallGroup(x[3],i);
  AutH:=AutomorphismGroup(H); 
  r, P:=PermutationRepresentation(AutH);
  ord3:={phi: phi in P| Order(phi) eq 3}; {*Order(phi): phi in P*};
  for phi in ord3 do 
    t:=hom<K -> AutH| <K.1, phi @@ r>>;
    G:=SemidirectProduct(H,K,t);
    Append(~Final, [* x, phi, IdentifyGroup(quo<G|DerivedGroup(G)>)*]);
    if IdentifyGroup(quo<G|DerivedGroup(G)>) eq <3,1> then
       IdentifyGroup(quo<G|DerivedGroup(G)>);
           if  ExSphSystem_givenG(G,{*2,3,9*}) then 
             Append(~tocheck_compatible4248,[*{* 5/18, 1/2^^2, 13/18 *},{*{*2,3,9*}^^2*},G*]); 
           end if; 
    end if;
    
  end for;
 end for;
end for;

tocheck_compatible4248;
[* *]


Result_group_gt_2000:=[* x : x in Result | x[3] gt 2000*];

time how_to_excludePG(Result_group_gt_2000);
[* *]
Time: 6.450

Result_2, NotSatisfyProp33_2, PerfectGroups_2:=List_Intermediate_Sign(Result_group_gt_2000);

#Result_2;
92
> #NotSatisfyProp33_2;
0
> #PerfectGroups_2;
34

 {*x[3] : x in Result_2*};
{* 480, 496, 512, 520, 536, 540, 560^^5, 580^^3, 640, 672^^21, 688^^4, 696^^9, 
704^^4, 720, 760, 768^^4, 840^^5, 880, 960, 1120^^2, 1152, 1168, 1176, 1200, 
1216, 1224, 1232, 1248, 1264, 1272, 1296, 1312, 1344^^5, 1376, 1392^^3, 1408, 
1512, 1536 *}

time Res_2,ResAb_2:=how_to_exclude(Result_2: Interested_orders:={ j : j in [1..2000] | j ne 512 and j ne 1536 and j ne 1264 and j ne 1272 and j ne 1376});

Time: 40205.680

#Res_2;
275


FinRes_2:=[**];

for x in Res_2 do 
  for bas in FinIntBasket(x[1]) do 
    Append(~FinRes_2, [*bas, x[2], x[3]*]);
  end for;
end for;

time ExSurf_2:=ExistingSurfaces(FinRes_2);
Time: 485917.450

ExSurf_2;
[* [*
    {* *},
    {*
        {* 2^^5 *}^^2
    *},
    <640, 7665>
*], [*
    {* *},
    {*
        {* 2^^5 *}^^2
    *},
    <640, 8697>
*], [*
    {* *},
    {*
        {* 2^^5 *}^^2
    *},
    <640, 12278>
*], [*
    {* *},
    {*
        {* 2^^5 *}^^2
    *},
    <640, 15814>
*], [*
    {* *},
    {*
        {* 2^^5 *}^^2
    *},
    <480, 1167>
*], [*
    {* *},
    {*
        {* 4^^3 *}^^2
    *},
    <1152, 5232>
*] *]

// The groups of order 640 come from the following triples of Result:

[*
    {* 1/5^^5 *},
    {*  
        {* 2, 5^^2 *}^^2
    *},
    3200
*]

T:=[* x : x in ExSurf_2| x[3][1] eq 640*];

Final:=[**];
tocheck_compatible3200:=[**];

K:=SmallGroup(5,1);

for x in T do 
  H:=SmallGroup(x[3][1],x[3][2]);
  AutH:=AutomorphismGroup(H); 
  r, P:=PermutationRepresentation(AutH);
  ord5:={phi: phi in P| Order(phi) eq 5}; {*Order(phi): phi in P*};
  for phi in ord5 do 
    t:=hom<K -> AutH| <K.1, phi @@ r>>;
    G:=SemidirectProduct(H,K,t);
    Append(~Final, [* x, phi, IdentifyGroup(quo<G|DerivedGroup(G)>)*]);
    if IdentifyGroup(quo<G|DerivedGroup(G)>) eq <5,1> then
       IdentifyGroup(quo<G|DerivedGroup(G)>);
           if  ExSphSystem_givenG(G,{*2,5,5*}) then 
             Append(~tocheck_compatible3200,[*{* 1/5^^5 *},{*{*2,5,5*}^^2*},G*]); 
           end if; 
    end if;
    
  end for;
end for;

tocheck_compatible3200;
[* *]

// The groups of order 480 come from the following triples of Result:

[*
    {* 1/3^^3, 2/3^^3 *},
    {*
        {* 2, 5^^2 *}^^2
    *},
    2400
*]


T:=[* x : x in ExSurf_2| x[3][1] eq 480*];

Final:=[**];
tocheck_compatible2400:=[**];

K:=SmallGroup(5,1);

for x in T do 
  H:=SmallGroup(x[3][1],x[3][2]);
  AutH:=AutomorphismGroup(H); 
  r, P:=PermutationRepresentation(AutH);
  ord5:={phi: phi in P| Order(phi) eq 5}; {*Order(phi): phi in P*};
  for phi in ord5 do 
    t:=hom<K -> AutH| <K.1, phi @@ r>>;
    G:=SemidirectProduct(H,K,t);
    Append(~Final, [* x, phi, IdentifyGroup(quo<G|DerivedGroup(G)>)*]);
    if IdentifyGroup(quo<G|DerivedGroup(G)>) eq <5,1> then
       IdentifyGroup(quo<G|DerivedGroup(G)>);
           if  ExSphSystem_givenG(G,{*2,5,5*}) then 
             Append(~tocheck_compatible2400,[*{* 1/3^^3, 2/3^^3 *},{*{*2,5,5*}^^2*},G*]); 
           end if; 
    end if;
    
  end for;
end for;

tocheck_compatible2400;
[* *]

// The groups of order 1152 come from the following triples of Result:

[*
    {* 1/3^^3, 2/3^^3 *},
    {*
        {* 3^^2, 4 *}^^2
    *},
    3456
*] 


T:=[* x : x in ExSurf_2| x[3][1] eq 1152*];

Final:=[**];
tocheck_compatible3456:=[**];

K:=SmallGroup(3,1);

for x in T do 
  H:=SmallGroup(x[3][1],x[3][2]);
  AutH:=AutomorphismGroup(H); 
  r, P:=PermutationRepresentation(AutH);
  ord3:={phi: phi in P| Order(phi) eq 5}; {*Order(phi): phi in P*};
  for phi in ord3 do 
    t:=hom<K -> AutH| <K.1, phi @@ r>>;
    G:=SemidirectProduct(H,K,t);
    Append(~Final, [* x, phi, IdentifyGroup(quo<G|DerivedGroup(G)>)*]);
    if IdentifyGroup(quo<G|DerivedGroup(G)>) eq <3,1> then
       IdentifyGroup(quo<G|DerivedGroup(G)>);
           if  ExSphSystem_givenG(G,{*3,3,4*}) then 
             Append(~tocheck_compatible3456,[*{* 1/3^^3, 2/3^^3 *},{*{*3,3,4*}^^2*},G*]); 
           end if; 
    end if;
    
  end for;
end for;

tocheck_compatible3456;
[* *]

[* x : x in Result_2| x[3] eq 512*];                                         
[* [*
    {* 1/5, 2/5^^2, 4/5 *},
    {*
        {* 2^^5 *}^^2
    *},
    512
*] *]

// This comes from a group of order 2560 in Result:

[* [*
    {* 1/5, 2/5^^2, 4/5 *},
    {*
        {* 2, 5^^2 *}^^2
    *},
    2560
*] *]

time Res_2,ResAb_2:=how_to_exclude(Result_2: Interested_orders:={512});
// This function requires too much time to be processed and a lot of memory usage. For this reason, we have studied separately which groups of order 512 admit a spherical system of generators of signature [2,2,2,2,2]. It returns that there are exactly 701 groups like this, and we stored them in the "tocheck_compatible512.txt" file

// We load "tocheck_compatible512.txt" list

// We observe that the only possibile basket coming from {* 1/5, 2/5^^2, 4/5 *} for the intermediate quotient of order 512 is the empty basket {* *} since 5 does not divide 512.

ExSurf:=ExistingSurfaces(tocheck_compatible512);
#ExSurf;
32

// From Prop. 3.3 and Remark 3.10 (1) of our paper, the bigger group of order 2560 is a semidirect product of a subgroup of order 512 by an automorphism of that subgroup of order 5. Thus, first of all we have to select only those groups of order 512 that admit an automorphism of order 5. A first easy check is that the order of the automorphism group has to be divisible by 5. 

for x in ExSurf do 
  if IsDivisibleBy(#AutomorphismGroup(SmallGroup(x[3][1],x[3][2])), 5) then 
     x; 
  end if;
end for; 

[*
    {* *},
    {*
        {* 2^^5 *}^^2
    *},
    <512, 66191>
*]

// Now we should construct the bigger group off order 2560 as a semidirect product of H:=SmallGroup(512, 66191) by an automorphism of H of order 5. Let us count the number of automorphisms of H; 


H:=SmallGroup(512, 66191);
  AutH:=AutomorphismGroup(H); 
  r, P:=PermutationRepresentation(AutH);
  ord5:=[phi: phi in P| Order(phi) eq 5]; {*Order(phi): phi in P*};

{* 1, 2^^1084415, 3^^327680, 4^^27161600, 5^^1572864, 6^^23265280, 8^^30474240, 
10^^23592960, 12^^18350080 *}

// Hence there 1572864 automorphisms of H of order 5. It is very expensive to construct for each of these automorphisms a semidirect product of H and to look for those admitting a spherical system of generators of signature {* 2, 5, 5 *}. For this reason, we simply observe that all of these automorphisms are conjugated to each other, and so, as a standard result of group theory, they define isomorphic semidirect products:

for i in [1..#ConjugacyClasses(P)] do 
   if ConjugacyClasses(P)[i][1] eq 5 then 
      ConjugacyClasses(P)[i]; 
   end if; 
end for;

<5, 1572864, (1, 96, 160, 57, 89)(2, 140, 94, 43, 61)(3, 53, 139, 131, 17)(4, 28, 145, 152, 45)(5, 112, 110, 23, 148)(6, 144, 34, 44, 55)(7, 8, 54, 70, 102)(9, 46, 77, 63, 83)(10, 116, 37, 48, 138)(11, 
    120, 147, 73, 155)(12, 14, 91, 106, 33)(13, 20, 51, 30, 38)(15, 124, 99, 76, 36)(16, 92, 150, 97, 159)(18, 114, 59, 121, 21)(19, 24, 115, 32, 100)(22, 143, 69, 25, 47)(26, 52, 117, 108, 85)(27, 118, 
    50, 41, 93)(29, 95, 71, 133, 127)(31, 136, 78, 134, 98)(35, 86, 75, 137, 74)(39, 65, 132, 82, 72)(40, 142, 113, 153, 149)(42, 58, 151, 56, 90)(49, 107, 158, 141, 122)(60, 79, 109, 135, 156)(62, 67, 
    68, 84, 101)(64, 88, 125, 126, 130)(66, 123, 157, 119, 105)(80, 81, 154, 87, 129)(103, 104, 128, 111, 146)>

// Hence we only have one semidirect product of the group H by an automorphism of H of order 5, up isomorphism. Let us define it: 

phi:=P! (1, 96, 160, 57, 89)(2, 140, 94, 43, 61)(3, 53, 139, 131, 17)(4, 28, 145, 152, 45)(5, 112, 110, 23, 148)(6, 144, 34, 44, 55)(7, 8, 54, 70, 102)(9, 46, 77, 63, 83)(10, 116, 37, 48, 138)(11, 
    120, 147, 73, 155)(12, 14, 91, 106, 33)(13, 20, 51, 30, 38)(15, 124, 99, 76, 36)(16, 92, 150, 97, 159)(18, 114, 59, 121, 21)(19, 24, 115, 32, 100)(22, 143, 69, 25, 47)(26, 52, 117, 108, 85)(27, 118, 
    50, 41, 93)(29, 95, 71, 133, 127)(31, 136, 78, 134, 98)(35, 86, 75, 137, 74)(39, 65, 132, 82, 72)(40, 142, 113, 153, 149)(42, 58, 151, 56, 90)(49, 107, 158, 141, 122)(60, 79, 109, 135, 156)(62, 67, 
    68, 84, 101)(64, 88, 125, 126, 130)(66, 123, 157, 119, 105)(80, 81, 154, 87, 129)(103, 104, 128, 111, 146);

phi @@ r;
Automorphism of GrpPC : H which maps:
    H.1 |--> H.2 * H.6 * H.8 * H.9
    H.2 |--> H.1 * H.3 * H.4 * H.6 * H.7 * H.8
    H.3 |--> H.2 * H.4 * H.6 * H.9
    H.4 |--> H.3 * H.4
    H.5 |--> H.5 * H.7 * H.9
    H.6 |--> H.9
    H.7 |--> H.7 * H.8 * H.9
    H.8 |--> H.7 * H.9
    H.9 |--> H.6 * H.8

K:=SmallGroup(5,1);
t:=hom<K -> AutH| <K.1, phi @@ r>>;
G:=SemidirectProduct(H,K,t);

// Now we check if G admits a spherical system of generators of signature {* 2, 5, 5 *}:

if IdentifyGroup(quo<G|DerivedGroup(G)>) eq <5,1> then
       IdentifyGroup(quo<G|DerivedGroup(G)>);
            ExSphSystem_givenG(G,{* 2, 5, 5 *});                       
end if;
<5, 1>
true

// Now it only remains to check if G admits a pair of spherical systems of generators of signature {* 2, 5, 5 *} compatible with the basket of singularities {* 1/5, 2/5^^2, 4/5 *}:

ExistingSurfaces_triple_givenG([*{* 1/5, 2/5^^2, 4/5 *},{*{* 2, 5, 5 *}^^2*},G*]);
false

// Hence we can finally exclude the case [* {* 2/5^^4 *}, {*{*2, 5, 5 *}^^2*}, 2560 *] of Result. 

L:=[* x : x in Result_2| x[3] eq 1536*];
L;
[* [*
    {* 1/5^^5 *},
    {*
        {* 4^^3 *}^^2
    *},
    1536
*] *]

time Result_1536:=how_to_exclude(L);

Time: 199537.640

Result_1536;
[* *]

[* x: x in Result_2| x[3] eq 1264*];
[* [*
    {* 1/4, 1/3, 3/8^^2, 2/3 *},
    {*
        {* 4^^3 *}^^2
    *},
    1264
*] *]

// This comes from a triple of Result of group order 3792

[*x : x in Result | x[3] in {1264*i: i in [1..30]}*];    
[* [*
    {* 1/4, 1/3, 3/8^^2, 2/3 *},
    {*
        {* 3^^2, 4 *}^^2
    *},
    3792
*] *]

Final:=[**];
tocheck_compatible3792:=[**];

K:=SmallGroup(3,1);

for i in [1..NumberOfSmallGroups(1264)] do 
 for x in [* y : y in Result_2|y[3] eq 1264*] do 

H:=SmallGroup(x[3],i);
  AutH:=AutomorphismGroup(H); 
  r, P:=PermutationRepresentation(AutH);
  ord3:={phi: phi in P| Order(phi) eq 3}; {*Order(phi): phi in P*};
  for phi in ord3 do 
    t:=hom<K -> AutH| <K.1, phi @@ r>>;
    G:=SemidirectProduct(H,K,t);
    Append(~Final, [* x, phi, IdentifyGroup(quo<G|DerivedGroup(G)>)*]);
    if IdentifyGroup(quo<G|DerivedGroup(G)>) eq <3,1> then
       IdentifyGroup(quo<G|DerivedGroup(G)>);
           if  ExSphSystem_givenG(G,{* 3, 3, 4 *}) then 
             Append(~tocheck_compatible3792,[*x[1],{*{* 3, 3, 4 *}^^2*},G*]); 
           end if; 
    end if;
    
  end for;
end for;
end for;

tocheck_compatible3792;
[* *]

[* x: x in Result_2| x[3] eq 1272*];
[* [*
    {* 1/4^^2, 3/8, 1/2, 5/8 *},
    {*
        {* 4^^3 *}^^2
    *},
    1272
*] *]


// This comes from a triple of Result of group order 3816

[*x : x in Result | x[3] in {1272*i: i in [1..30]}*]; 
[* [*
    {* 1/4^^2, 3/8, 1/2, 5/8 *},
    {*
        {* 3^^2, 4 *}^^2
    *},
    3816
*] *]

Final:=[**];
tocheck_compatible3816:=[**];

K:=SmallGroup(3,1);

for i in [1..NumberOfSmallGroups(1272)] do 
 for x in [* y : y in Result_2|y[3] eq 1272*] do 

H:=SmallGroup(x[3],i);
  AutH:=AutomorphismGroup(H); 
  r, P:=PermutationRepresentation(AutH);
  ord3:={phi: phi in P| Order(phi) eq 3}; {*Order(phi): phi in P*};
  for phi in ord3 do 
    t:=hom<K -> AutH| <K.1, phi @@ r>>;
    G:=SemidirectProduct(H,K,t);
    Append(~Final, [* x, phi, IdentifyGroup(quo<G|DerivedGroup(G)>)*]);
    if IdentifyGroup(quo<G|DerivedGroup(G)>) eq <3,1> then
       IdentifyGroup(quo<G|DerivedGroup(G)>);
           if  ExSphSystem_givenG(G,{* 3, 3, 4 *}) then 
             Append(~tocheck_compatible3816,[*x[1],{*{* 3, 3, 4 *}^^2*},G*]); 
           end if; 
    end if;
    
  end for;
end for;
end for;

tocheck_compatible3816; 
[* *]

[* x: x in Result_2| x[3] eq 1376*];
[* [*
    {* 1/6^^2, 1/3, 2/3^^2 *},
    {*
        {* 4^^3 *}^^2
    *},
    1376
*] *]

// This comes from a triple of Result of group order 4128

[*x : x in Result | x[3] in {1376*i: i in [1..30]}*]; 
[* [*
    {* 1/6^^2, 1/3, 2/3^^2 *},
    {*
        {* 3^^2, 4 *}^^2
    *},
    4128
*] *]

Final:=[**];
tocheck_compatible4128:=[**];

K:=SmallGroup(3,1);

for i in [1..NumberOfSmallGroups(1376)] do 
 for x in [* y : y in Result_2|y[3] eq 1376*] do 

H:=SmallGroup(x[3],i);
  AutH:=AutomorphismGroup(H); 
  r, P:=PermutationRepresentation(AutH);
  ord3:={phi: phi in P| Order(phi) eq 3}; {*Order(phi): phi in P*};
  for phi in ord3 do 
    t:=hom<K -> AutH| <K.1, phi @@ r>>;
    G:=SemidirectProduct(H,K,t);
    Append(~Final, [* x, phi, IdentifyGroup(quo<G|DerivedGroup(G)>)*]);
    if IdentifyGroup(quo<G|DerivedGroup(G)>) eq <3,1> then
       IdentifyGroup(quo<G|DerivedGroup(G)>);
           if  ExSphSystem_givenG(G,{* 3, 3, 4 *}) then 
             Append(~tocheck_compatible4128,[*x[1],{*{* 3, 3, 4 *}^^2*},G*]); 
           end if; 
    end if;
    
  end for;
end for;
end for;

tocheck_compatible4128;
[* *]

// In this way we have excluded all the cases of Result list. Now we have to exclude the last 19 cases stored in NotSatisfyProp33

NotSatisfyProp33;
[* [*
    {* 1/5^^5 *},
    {*
        {* 2, 4, 6 *}^^2
    *},
    2304
*], [*
    {* 1/5^^5 *},
    {*
        {* 2, 3, 12 *}^^2
    *},
    2304
*], [*
    {* 3/20, 2/5, 1/2, 3/4 *},
    {*
        {* 2, 3, 12 *}^^2
    *},
    2016
*], [*
    {* 3/20, 2/5, 1/2, 3/4 *},
    {*
        {* 2, 4, 6 *}^^2
    *},
    2016
*], [*
    {* 1/5, 1/2, 11/20, 3/4 *},
    {*
        {* 2, 3, 12 *}^^2
    *},
    2016
*], [*
    {* 1/5, 1/2, 11/20, 3/4 *},
    {*
        {* 2, 4, 6 *}^^2
    *},
    2016
*], [*
    {* 1/8, 1/2, 5/8, 3/4 *},
    {*
        {* 2, 3, 12 *}^^2
    *},
    2016
*], [*
    {* 1/8, 1/2, 5/8, 3/4 *},
    {*
        {* 2, 4, 6 *}^^2
    *},
    2016
*], [*
    {* 1/8, 1/4, 1/2^^2, 5/8 *},
    {*
        {* 2, 3, 12 *}^^2
    *},
    2088
*], [*
    {* 1/5, 1/4, 1/2^^2, 11/20 *},
    {*
        {* 2, 3, 12 *}^^2
    *},
    2088
*], [*
    {* 3/20, 1/4, 2/5, 1/2^^2 *},
    {*
        {* 2, 3, 12 *}^^2
    *},
    2088
*], [*
    {* 1/3, 1/2, 13/24, 5/8 *},
    {*
        {* 2, 4, 6 *}^^2
    *},
    2016
*], [*
    {* 1/3, 1/2, 13/24, 5/8 *},
    {*
        {* 2, 3, 12 *}^^2
    *},
    2016
*], [*
    {* 1/6^^2, 1/3, 2/3^^2 *},
    {*
        {* 2, 3, 12 *}^^2
    *},
    2064
*], [*
    {* 1/6^^2, 1/3, 2/3^^2 *},
    {*
        {* 2, 4, 6 *}^^2
    *},
    2064
*], [*
    {* 2/9^^3, 1/3 *},
    {*
        {* 2, 3, 12 *}^^2
    *},
    2112
*], [*
    {* 2/9^^3, 1/3 *},
    {*
        {* 2, 4, 6 *}^^2
    *},
    2112
*], [*
    {* 5/24, 1/2, 5/8, 2/3 *},
    {*
        {* 2, 3, 12 *}^^2
    *},
    2016
*], [*
    {* 5/24, 1/2, 5/8, 2/3 *},
    {*
        {* 2, 4, 6 *}^^2
    *},
    2016
*] *]

time how_to_excludePG(NotSatisfyProp33);
[* *]
Time: 0.000

// The abelianization of the orbifold group of signature {* 2, 3, 12 *} is C6, hence the abelianization of G may be at most either C2, C3, or C6. If the abelianization if C6, then it there exists a normal subgroup of G with index 2, the inverse image of a index 2 subgroup of C6 by the abelianization map of G. 

L:=[**];
for x in NotSatisfyProp33 do 
if {*2,3,12*} in x[2] then 
for y in List_Intermediate_Sign_from_a_triple(x,2) do 
Append(~L, y);
end for;
for y in List_Intermediate_Sign_from_a_triple(x,3) do 
Append(~L, y);
end for;
end if;
end for;

time Res,Res_Ab:=how_to_exclude(L);
Time: 1328.810

#Res;
121

FinRes:=[**];

IntBasket:=function(a, j)
  IntB:=[];
  B:={k/a : k in [1..a-1]};
  for i in [0..j] do 
    Append(~IntB, Multisets(B, i));
  end for;
  Fin:={};
  for i in [1..#IntB] do 
    for s in IntB[i] do 
      Include(~Fin, s);
    end for;
  end for;
  return Fin;
end function;

FinIntBasket:=function(basket)
  Final:=[**];

  t:={* Denominator(r): r in basket*};
  Seq:=[[a,#[ x : x in t | x eq a]]: a in MultisetToSet(t)];
  A:=[];
  for s in Seq do 
     Append(~A, IntBasket(s[1],s[2]));
  end for;  
  for x in CartesianProduct(A) do  
   int_bas:={**};
   for l in x do 
    for y in l do 
      Include(~int_bas, y); 
    end for;
   end for;
   Append(~Final, int_bas);
  end for; 
  return {x : x in Final};
end function;

FinRes:=[**];

for x in Res do 
  for bas in FinIntBasket(x[1]) do 
    Append(~FinRes, [*bas, x[2], x[3]*]);
  end for;
end for;

time ExSurf:=ExistingSurfaces(FinRes);
Time: 45248.130

ExSurf;
[* *]

// It only remains to exclude those triples of NotSatisfyProp33 having signature {*2,4,6*}, whose orbifold group has abelianization C2^2. Hence G has abelianization either C2 or C2^2. However 

L:=[**];
for x in NotSatisfyProp33 do 
if {*2,4,6*} in x[2] then 
for y in List_Intermediate_Sign_from_a_triple(x,2) do 
Append(~L, y);
end for;
end if;
end for;

time Res,Res_Ab:=how_to_exclude(L);
Time: 2374.550

FinRes:=[**];

for x in Res do 
  for bas in FinIntBasket(x[1]) do 
    Append(~FinRes, [*bas, x[2], x[3]*]);
  end for;
end for;

time ExSurf:=ExistingSurfaces(FinRes);
Time: 5885.570
ExSurf;
[* *]

// We have excluded all the cases stored in the secondary output of ListGroups(23,4);